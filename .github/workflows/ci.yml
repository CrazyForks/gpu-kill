name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

env:
  RUST_BACKTRACE: 1
  RUST_LOG: info

jobs:
  # Standard CI tests (no GPU hardware required)
  test:
    name: Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-13, windows-2022]
        include:
          - os: ubuntu-22.04
            install_deps: |
              sudo apt-get update
              sudo apt-get install -y build-essential libssl-dev pkg-config
          - os: macos-13
            install_deps: |
              xcode-select --install || true
          - os: windows-2022
            install_deps: |
              # Windows dependencies handled by vcpkg

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install system dependencies
        run: ${{ matrix.install_deps }}

      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run unit tests
        run: |
          cargo test --features mock_nvml
          cargo test --no-default-features

      - name: Run integration tests
        run: cargo test --test integration_tests

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run fmt
        run: cargo fmt --all -- --check

      - name: Build
        run: cargo build --release

      - name: Test basic functionality
        run: |
          ./target/release/gpukill --version
          ./target/release/gpukill --help

  # Security and compliance
  security:
    name: Security Audit
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install security tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libssl-dev pkg-config
          cargo install cargo-audit

      - name: Security audit
        run: cargo audit

      - name: Build with security flags
        run: |
          RUSTFLAGS="-C target-cpu=native" cargo build --release
          strip target/release/gpukill

  # Documentation and API tests
  api-tests:
    name: API Tests
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libssl-dev pkg-config

      - name: Test MCP server build
        run: cargo build --release -p gpukill-mcp

      - name: Test HTTP server build
        run: cargo build --release

      - name: Test dashboard build
        run: |
          cd dashboard
          npm install
          npm run build

  # Cross-compilation tests
  cross-compile:
    name: Cross-Compile (${{ matrix.target }})
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cross-compilation tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libssl-dev pkg-config
          rustup target add ${{ matrix.target }}

      - name: Cross-compile
        run: cargo build --release --target ${{ matrix.target }}